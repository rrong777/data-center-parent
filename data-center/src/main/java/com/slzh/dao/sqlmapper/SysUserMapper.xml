<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slzh.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.slzh.model.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="gender" jdbcType="TINYINT" property="gender"/>
        <result column="roles" property="roles"></result>
        <result column="organization_id" property="organizationId"></result>
        <result column="police_id" property="policeId"></result>
        <result column="organizationName" property="organizationName"></result>
        <result column="roleIds" property="roleIds"></result>
        <result column="id_card" property="idCard"></result>
        <result column="out_password" property="outPassword"></result>

    </resultMap>

    <update id="delete">
        update sys_user set is_delete = 1  where id = #{userId}
    </update>
    <update id="batchAlterUserOrganization">
        update sys_user set organization_id = #{organizationId} where id in
        <foreach collection="userIds" item="userId" separator="," open="(" close=")">
            #{userId}
        </foreach>
    </update>
    <select id="getRolesByUsername" resultType="java.util.Map">
        select GROUP_CONCAT(r.role_name) roles, os.name from sys_role r, sys_user_role_mapping ur, sys_user u
        left join sys_organization_structure os on u.organization_id = os.id
        where u.id = ur.user_id
          and r.id = ur.role_id
          and u.username = #{username}
    </select>
    <update id="setUserRole">
        insert ignore into sys_user_role_mapping(user_id, role_id)
        values
        <foreach collection="roleIds" separator="," item="item">
            (#{userId}, #{item})
        </foreach>
    </update>
    <insert id="insertOne">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user(
        <if test="nickname!=null and nickname!=''">nickname,</if>
        <if test="password!=null and password!=''">password,</if>
        <if test="salt!=null and salt!=''">salt,</if>
        <if test="email!=null and email!=''">email,</if>
        <if test="mobile!=null and mobile!=''">mobile,</if>
        <if test="gender!=null and gender!=''">gender,</if>
        <if test="organizationId!=null and organizationId!=''">organization_id,</if>
        <if test="policeId!=null and policeId != ''">
            police_id,
        </if>
        <if test="idCard!=null and idCard!=''">
            id_card,
        </if>
        <if test="outPassword!=null and outPassword!=''">
            out_password,
        </if>
        username,status,created_at)
        VALUE (
        <if test="nickname!=null and nickname!=''">#{nickname},</if>
        <if test="password!=null and password!=''">#{password},</if>
        <if test="salt!=null and salt!=''">#{salt},</if>
        <if test="email!=null and email!=''">#{email},</if>
        <if test="mobile!=null and mobile!=''">#{mobile},</if>
        <if test="gender!=null and gender!=''">#{gender},</if>
        <if test="organizationId!=null and organizationId!=''">#{organizationId},</if>
        <if test="policeId!=null and policeId != ''">
            #{policeId},
        </if>
        <if test="idCard!=null and idCard != ''">
            #{idCard},
        </if>
        <if test="outPassword!=null and outPassword!=''">
            #{outPassword,jdbcType=VARCHAR},
        </if>
        #{username},1,now()
        )
    </insert>
    <delete id="deleteUserRoleMapping">
        delete from sys_user_role_mapping where user_id = #{userId}
    </delete>
    <insert id="insertUserRoleMapping">
        insert ignore into sys_user_role_mapping(user_id, role_id)
        values
        <foreach collection="roleList" item="item" separator=",">
            (#{userId}, #{item})
        </foreach>
    </insert>
    <select id="findPage" resultMap="BaseResultMap">
        SELECT
        u.id,
        u.username,
        u.nickname,
        u.avatar,
        u.email,
        u.mobile,
        u.STATUS,
        u.created_at,
        u.updated_at,
        u.gender,
        u.organization_id,
        u.police_id,
        GROUP_CONCAT( r.role_name ) roles,
        GROUP_CONCAT(r.id) roleIds,
        os.`name` organizationName,
        u.out_password
        FROM
        sys_user u
        left join sys_user_role_mapping us on us.user_id = u.id
        left join sys_role r on r.id = us.role_id
        left join sys_organization_structure os on u.organization_id = os.id
        where is_delete != 1
        <if test="params.organizationIds != null and params.organizationIds.size() > 0">
            and u.organization_id in
            <foreach collection="params.organizationIds" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="params.username != null and params.username != ''">
            and u.username like concat('%',#{params.username},'%')
        </if>
        <if test="params.nickname != null and params.nickname !=''">
            and u.nickname like concat('%',#{params.nickname},'%')
        </if>
        <if test="params.status != null">
            and u.status = #{params.status}
        </if>
        <if test="params.userIdList != null and params.userIdList.size() > 0">
            and u.id in
            <foreach collection="params.userIdList" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        group by u.id
    </select>
    <select id="getRoleListByDB" resultType="java.lang.String">
        select role_name from sys_user_role_mapping ur, sys_role r  where ur.role_id = r.id and ur.user_id = #{userId}
    </select>
    <select id="findRoleIdsByList" resultType="java.lang.Integer">
        select role_id from sys_user_role_mapping where user_id in
        <foreach collection="userIds" separator="," item="item" close=")" open="(">
            #{item}
        </foreach>
    </select>
    <update id="batchAlterStatus">
        update sys_user set status = #{status} where id in
        <foreach collection="userIds" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>
    <insert id="setUserHabit">
        insert into user_habit(user_id, user_habit)
        values(#{userId}, #{userHabit})
            on duplicate key update
        user_habit = values(user_habit)
    </insert>
    <select id="getUserHabit" resultType="java.lang.String">
        select user_habit from user_habit where user_id = #{userId}
    </select>
    <select id="getOriginalPasw" resultType="java.util.Map">
        select password,salt from sys_user where id = #{id}
    </select>
    <update id="alterUserPasw">
        update sys_user set password=#{password},salt=#{salt},out_password=#{outPassword,jdbcType=VARCHAR}
        where id=#{id}
    </update>
    <update id="update">
        update sys_user
        <set>
            <if test="nickname!=null and nickname!=''">nickname=#{nickname},</if>
            <if test="email!=null and email!=''">email=#{email},</if>
            <if test="mobile!=null and mobile!=''">mobile=#{mobile},</if>
            <if test="gender!=null and gender!=''">gender=#{gender},</if>
            <if test="policeId!=null and policeId!=''">
                police_id=#{policeId},
            </if>
            <if test="idCard!=null and idCard!=''">
                id_card=#{idCard},
            </if>
            <if test="organizationId!=null and organizationId!=''">

                organization_id = #{organizationId},
            </if>
            <if test="status != null">
                status=#{status}
            </if>
            <if test="outPassword != null and outPassword!=''">
                out_password=#{outPassword}
            </if>
        </set>
        where
        id = #{id}
    </update>

    <select id="getUserAccessUrls" resultType="java.lang.String">
        select t3.access_address from sys_user_role_mapping t1, sys_role_app_mapping t2, portal_app_center t3
        where t1.role_id = t2.role_id and t2.app_id = t3.register_info_id
          and t1.user_id = #{userId}
    </select>
    <!--  登录还有认证这块的，不能修改  -->
    <select id="findByNameForSecurity" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            u.*,
            os.NAME organizationName,
            GROUP_CONCAT( r.`role_name` ) roles,
            GROUP_CONCAT( r.id) roleIds
        FROM
            sys_user u
                LEFT JOIN sys_organization_structure os ON u.organization_id = os.id
                left join sys_user_role_mapping us on us.user_id = u.id
                left join sys_role r on us.role_id = r.id
        WHERE
            u.username = #{username}
        group by u.id

    </select>
    <select id="findByIdForSecurity" resultMap="BaseResultMap">
        select u.* from sys_user u
        where u.id = #{userId}
        and u.is_delete != 1
    </select>
    <select id="getUserRoles" resultType="java.lang.String">
        select role_id from sys_user_role_mapping where user_id = #{userId}
    </select>
</mapper>