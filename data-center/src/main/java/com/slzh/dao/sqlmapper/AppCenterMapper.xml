<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slzh.dao.AppCenterMapper">
    <resultMap id="BaseResultMap" type="com.slzh.model.sso.AppCenter">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 19 16:43:20 CST 2021.
        -->
        <id column="register_info_id" jdbcType="VARCHAR" property="registerInfoId"/>
        <result column="register_info_id" jdbcType="VARCHAR" property="appId"/>
        <result column="developers" jdbcType="VARCHAR" property="developers"/>
        <result column="application_name" jdbcType="VARCHAR" property="applicationName"/>
        <result column="application_type" jdbcType="INTEGER" property="applicationType"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
        <result column="mac_address" jdbcType="VARCHAR" property="macAddress"/>
        <result column="access_address" jdbcType="VARCHAR" property="accessAddress"/>
        <result column="resource_id" jdbcType="BIGINT" property="resourceId"/>
        <result column="resource_desc" jdbcType="VARCHAR" property="resourceDesc"/>
        <result column="is_enabled" jdbcType="INTEGER" property="isEnabled"/>
        <result column="license_code" jdbcType="VARCHAR" property="licenseCode"/>
        <result column="inner_license_code" jdbcType="VARCHAR" property="innerLicenseCode"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="create_department" jdbcType="VARCHAR" property="createDepartment"/>
        <result column="create_server_host" jdbcType="VARCHAR" property="createServerHost"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="BIGINT" property="updateUser"/>
        <result column="update_department" jdbcType="VARCHAR" property="updateDepartment"/>
        <result column="update_server_host" jdbcType="VARCHAR" property="updateServerHost"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="record_version" jdbcType="INTEGER" property="recordVersion"/>
        <result column="download_count" jdbcType="INTEGER" property="downloadCount"/>
        <result column="loginLink" jdbcType="VARCHAR" property="loginLink"/>
        <result column="label_id" jdbcType="INTEGER" property="labelId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.slzh.model.sso.AppCenter">
        <result column="icon" jdbcType="LONGVARCHAR" property="icon"/>
    </resultMap>
    <resultMap id="labelIdsMap" type="com.slzh.model.sso.AppCenter">
        <id column="app_id" property="appId"></id>
        <collection property="labelIds" ofType="java.lang.Integer" javaType="java.util.List">
            <result column="label_id"></result>
        </collection>
    </resultMap>
    <resultMap id="menuIdsMap" type="com.slzh.model.sso.AppCenter">
        <id column="app_id" property="appId"></id>
        <collection property="menuIds" ofType="java.lang.Integer" javaType="java.util.List">
            <result column="label_id"></result>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    register_info_id, developers, application_name, application_type, ip_address, mac_address, 
    access_address, resource_id, resource_desc, is_enabled, license_code, inner_license_code, 
    remark, is_delete, create_user, create_department, create_server_host, create_time, 
    update_user, update_department, update_server_host, update_time, record_version, 
    download_count,loginLink
  </sql>

    <sql id="Blob_Column_List">
    icon
  </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from portal_app_center
        where register_info_id = #{registerInfoId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from portal_app_center
    where register_info_id = #{registerInfoId,jdbcType=VARCHAR}
  </delete>
    <insert id="addLabel">
    insert into portal_label (label_name, `type`)
    value(#{labelName},#{type})
  </insert>
    <select id="getLabels" resultType="java.util.Map">
    select id,label_name labelName, `type` from portal_label where del=1
  </select>
    <select id="getNumsForLabelApp" resultType="java.util.Map">
        select count(0) as `count`,t1.label_id as labelId from portal_app_label t1, portal_app_center t2
        where t1.app_id = t2.register_info_id
        and t2.is_delete = 0
        <if test="appIds!=null and appIds.size()>0">
            and register_info_id in
            <foreach collection="appIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        group by label_id
    </select>
    <select id="getCountForHot" resultType="java.lang.Integer">
        select count(0) `count` from (select download_count ,register_info_id from portal_app_center
        where is_delete = 0
        <if test="appIds!=null and appIds.size()>0">
            and register_info_id in
            <foreach collection="appIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        order by download_count desc
        limit 10) temp
    </select>
    <select id="getCountForNewest" resultType="java.lang.Integer">
    select count(0) `count` from portal_app_center where create_time > #{startTime}
  </select>
    <select id="getAllCount" resultType="java.lang.Integer">
        select count(0) `count` from portal_app_center where is_delete = 0
        <if test="appIds!=null and appIds.size()>0">
            and register_info_id in
            <foreach collection="appIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
    </select>
    <delete id="deleteLabel">
    delete from portal_label where id = #{labelId}
  </delete>

    <update id="updateLabel">
    update portal_label set label_name = #{labelName}
    where id = #{labelId}
  </update>

    <delete id="deleteLabelForApp">
    delete from portal_app_label where app_id = #{registerInfoId}
  </delete>
    <insert id="addLabelForApp">
        insert into portal_app_label(app_id,label_id)
        values
        <foreach collection="labelIds" item="labelId" separator=",">
            (#{registerInfoId},#{labelId})
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.slzh.model.sso.AppCenter">
        <selectKey keyProperty="registerInfoId" order="AFTER" resultType="java.lang.String">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into portal_app_center (developers, application_name, application_type,
        ip_address, mac_address, access_address,
        resource_id, resource_desc, is_enabled,
        license_code, inner_license_code, remark,
        is_delete, create_user, create_department,
        create_server_host, create_time, update_user,
        update_department, update_server_host, update_time,
        record_version, download_count, icon, loginLink
        )
        values (#{developers,jdbcType=VARCHAR}, #{applicationName,jdbcType=VARCHAR},
        #{applicationType,jdbcType=INTEGER},
        #{ipAddress,jdbcType=VARCHAR}, #{macAddress,jdbcType=VARCHAR}, #{accessAddress,jdbcType=VARCHAR},
        #{resourceId,jdbcType=BIGINT}, #{resourceDesc,jdbcType=VARCHAR}, #{isEnabled,jdbcType=INTEGER},
        #{licenseCode,jdbcType=VARCHAR}, #{innerLicenseCode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{isDelete,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, #{createDepartment,jdbcType=VARCHAR},
        #{createServerHost,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT},
        #{updateDepartment,jdbcType=VARCHAR}, #{updateServerHost,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
        #{recordVersion,jdbcType=INTEGER}, #{downloadCount,jdbcType=INTEGER}, #{icon,jdbcType=LONGVARCHAR},
        #{loginLink,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.slzh.model.sso.AppCenter">
        insert into portal_app_center
        <trim prefix="(" suffix=")" suffixOverrides=",">
            register_info_id,
            <if test="developers != null">
                developers,
            </if>
            <if test="applicationName != null">
                application_name,
            </if>
            <if test="applicationType != null">
                application_type,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="macAddress != null">
                mac_address,
            </if>
            <if test="accessAddress != null">
                access_address,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="resourceDesc != null">
                resource_desc,
            </if>
            <if test="isEnabled != null">
                is_enabled,
            </if>
            <if test="licenseCode != null">
                license_code,
            </if>
            <if test="innerLicenseCode != null">
                inner_license_code,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createDepartment != null">
                create_department,
            </if>
            <if test="createServerHost != null">
                create_server_host,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateDepartment != null">
                update_department,
            </if>
            <if test="updateServerHost != null">
                update_server_host,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="recordVersion != null">
                record_version,
            </if>
            <if test="downloadCount != null">
                download_count,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="loginLink != null">
                loginLink,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{registerInfoId},
            <if test="developers != null">
                #{developers,jdbcType=VARCHAR},
            </if>
            <if test="applicationName != null">
                #{applicationName,jdbcType=VARCHAR},
            </if>
            <if test="applicationType != null">
                #{applicationType,jdbcType=INTEGER},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="macAddress != null">
                #{macAddress,jdbcType=VARCHAR},
            </if>
            <if test="accessAddress != null">
                #{accessAddress,jdbcType=VARCHAR},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="resourceDesc != null">
                #{resourceDesc,jdbcType=VARCHAR},
            </if>
            <if test="isEnabled != null">
                #{isEnabled,jdbcType=INTEGER},
            </if>
            <if test="licenseCode != null">
                #{licenseCode,jdbcType=VARCHAR},
            </if>
            <if test="innerLicenseCode != null">
                #{innerLicenseCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createDepartment != null">
                #{createDepartment,jdbcType=VARCHAR},
            </if>
            <if test="createServerHost != null">
                #{createServerHost,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateDepartment != null">
                #{updateDepartment,jdbcType=VARCHAR},
            </if>
            <if test="updateServerHost != null">
                #{updateServerHost,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="recordVersion != null">
                #{recordVersion,jdbcType=INTEGER},
            </if>
            <if test="downloadCount != null">
                #{downloadCount,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=LONGVARCHAR},
            </if>
            <if test="loginLink != null">
                #{loginLink,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.slzh.model.sso.AppCenter">
        update portal_app_center
        <set>
            <if test="developers != null">
                developers = #{developers,jdbcType=VARCHAR},
            </if>
            <if test="applicationName != null">
                application_name = #{applicationName,jdbcType=VARCHAR},
            </if>
            <if test="applicationType != null">
                application_type = #{applicationType,jdbcType=INTEGER},
            </if>
            <if test="ipAddress != null">
                ip_address = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="macAddress != null">
                mac_address = #{macAddress,jdbcType=VARCHAR},
            </if>
            <if test="accessAddress != null">
                access_address = #{accessAddress,jdbcType=VARCHAR},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="resourceDesc != null">
                resource_desc = #{resourceDesc,jdbcType=VARCHAR},
            </if>
            <if test="isEnabled != null">
                is_enabled = #{isEnabled,jdbcType=INTEGER},
            </if>
            <if test="licenseCode != null">
                license_code = #{licenseCode,jdbcType=VARCHAR},
            </if>
            <if test="innerLicenseCode != null">
                inner_license_code = #{innerLicenseCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createDepartment != null">
                create_department = #{createDepartment,jdbcType=VARCHAR},
            </if>
            <if test="createServerHost != null">
                create_server_host = #{createServerHost,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateDepartment != null">
                update_department = #{updateDepartment,jdbcType=VARCHAR},
            </if>
            <if test="updateServerHost != null">
                update_server_host = #{updateServerHost,jdbcType=VARCHAR},
            </if>
            <if test="recordVersion != null">
                record_version = #{recordVersion,jdbcType=INTEGER},
            </if>
            <if test="downloadCount != null">
                download_count = #{downloadCount,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=LONGVARCHAR},
            </if>
            <if test="loginLink != null">
                loginLink = #{loginLink,jdbcType=VARCHAR},
            </if>
        </set>
        where register_info_id = #{registerInfoId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.slzh.model.sso.AppCenter">
    update portal_app_center
    set developers = #{developers,jdbcType=VARCHAR},
      application_name = #{applicationName,jdbcType=VARCHAR},
      application_type = #{applicationType,jdbcType=INTEGER},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      mac_address = #{macAddress,jdbcType=VARCHAR},
      access_address = #{accessAddress,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=BIGINT},
      resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=INTEGER},
      license_code = #{licenseCode,jdbcType=VARCHAR},
      inner_license_code = #{innerLicenseCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_department = #{createDepartment,jdbcType=VARCHAR},
      create_server_host = #{createServerHost,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_department = #{updateDepartment,jdbcType=VARCHAR},
      update_server_host = #{updateServerHost,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      record_version = #{recordVersion,jdbcType=INTEGER},
      download_count = #{downloadCount,jdbcType=INTEGER},
      icon = #{icon,jdbcType=LONGVARCHAR},
      loginLink = #{loginLink,jdbcType=VARCHAR}
    where register_info_id = #{registerInfoId,jdbcType=VARCHAR}
  </update>

    <update id="updateByPrimaryKey" parameterType="com.slzh.model.sso.AppCenter">
    update portal_app_center
    set developers = #{developers,jdbcType=VARCHAR},
      application_name = #{applicationName,jdbcType=VARCHAR},
      application_type = #{applicationType,jdbcType=INTEGER},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      mac_address = #{macAddress,jdbcType=VARCHAR},
      access_address = #{accessAddress,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=BIGINT},
      resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=INTEGER},
      license_code = #{licenseCode,jdbcType=VARCHAR},
      inner_license_code = #{innerLicenseCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_department = #{createDepartment,jdbcType=VARCHAR},
      create_server_host = #{createServerHost,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_department = #{updateDepartment,jdbcType=VARCHAR},
      update_server_host = #{updateServerHost,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      record_version = #{recordVersion,jdbcType=INTEGER},
      download_count = #{downloadCount,jdbcType=INTEGER},
      icon = #{icon,jdbcType=LONGVARCHAR},
      loginLink = #{loginLink,jdbcType=VARCHAR}
    where register_info_id = #{registerInfoId,jdbcType=VARCHAR}
  </update>

    <select id="selectRegisterInfoByLience" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from portal_app_center
        where license_code = #{licenseCode} limit 1
    </select>

    <select id="selectRegisterInfoByRegistorId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from portal_app_center
        where register_info_id = #{registerId} limit 1
    </select>
    <select id="selectRegisterInfoBygetDeveloper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from portal_app_center
        where developers = #{developer} order by create_time limit 1
    </select>


    <select id="getAppIdByDesktopId" resultType="java.lang.String">
        select appId from portal_app where desktopId = #{targetId}
    </select>

    <select id="getAppIdByFavoriteId" resultType="java.lang.String">
        select appId from portal_favorites_app where favoritesId = #{targetId}
    </select>
    <select id="getLabelIdsByAppIds" resultMap="labelIdsMap">
        select app_id , label_id from portal_app_label t1, portal_label t2

        where t1.label_id = t2.id
        and t2.`type` = 1
        and app_id in
        <foreach collection="appIds" separator="," item="appId" open="(" close=")">
            #{appId}
        </foreach>
    </select>
    <select id="getMenuIdsByAppIds" resultMap="menuIdsMap">
        select app_id , label_id from portal_app_label t1, portal_label t2

        where t1.label_id = t2.id
        and t2.`type` = 2
        and app_id in
        <foreach collection="appIds" separator="," item="appId" open="(" close=")">
            #{appId}
        </foreach>
    </select>
    <select id="listRegisterInfo" resultMap="BaseResultMap">
        select
        t1.register_info_id, t1.developers, t1.application_name, t1.application_type, t1.ip_address, t1.mac_address,
        t1.access_address, t1.resource_id, t1.resource_desc, t1.is_enabled, t1.license_code, t1.icon,
        t1.remark, t1.is_delete, t1.create_user, t1.create_department, t1.create_server_host, t1.create_time,
        t1.update_user, t1.update_department, t1.update_server_host, t1.update_time, t1.record_version,download_count,
        t1.loginLink

        from portal_app_center t1
        <if test="params.labelId != null and params.labelId != '' and params.labelId != 1 and params.labelId != 2">
            inner join portal_app_label t2 on t1.register_info_id = t2.app_id
            and t2.label_id = #{params.labelId}
        </if>
        <if test="params.menuId != null and params.menuId !=''">
            inner join portal_app_label t3 on t1.register_info_id = t3.app_id
            and t3.label_id = #{params.menuId}
        </if>
        where is_delete=0
        <if test="params.roles!=null and params.roles.size()>0">
            and t1.register_info_id in (select * from (select t2.app_id from sys_role t1 join sys_role_app_mapping t2 on
            t1.id
            =t2.role_id where role_name in
            <foreach collection="params.roles" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>)t
            )

        </if>
        <if test="params.keywords!=null and params.keywords!=''">
            and (developers like CONCAT('%',#{params.keywords},'%')
            or application_name like CONCAT('%',#{params.keywords},'%') )
        </if>
        <if test="params.isEnabled !=null">
            and is_enabled =#{params.isEnabled}
        </if>
        <choose>
            <when test="(params.sort != null and params.sort == 'download') or (params.labelId == 2)">
                order by download_count
            </when>
            <otherwise>
                order by update_time
            </otherwise>
        </choose>
        <choose>
            <when test="(params.isUp != null and params.isUp == 1)">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
    </select>
    <select id="getAppByLabel" resultMap="BaseResultMap">
        select t1.* from portal_app_center t1
        where 1=1
        <!-- 最新和最热 -->
        <if test="labelId != null">
            <if test="labelId == 1">
                and t1.create_time > #{startTime}
            </if>
            <if test="labelId == 2">
                order by download_count desc
                limit 10
            </if>
        </if>
    </select>

    <select id="listPlate" resultMap="BaseResultMap">
        select
        t1.register_info_id, t1.developers, t1.application_name, t1.application_type, t1.ip_address, t1.mac_address,
        t1.access_address, t1.resource_id, t1.resource_desc, t1.is_enabled, t1.license_code, t1.icon,
        t1.remark, t1.is_delete, t1.create_user, t1.create_department, t1.create_server_host, t1.create_time,
        t1.update_user, t1.update_department, t1.update_server_host, t1.update_time, t1.record_version,download_count,
        t1.loginLink
        from portal_app_center t1
        <if test="params.labelId != null and params.labelId != '' and params.labelId != 1 and params.labelId != 2">
            inner join portal_app_label t2 on t1.register_info_id = t2.app_id
            and t2.label_id = #{params.labelId}
        </if>
        <if test="params.menuId != null and params.menuId !=''">
            inner join portal_app_label t3 on t1.register_info_id = t3.app_id
            and t3.label_id = #{params.menuId}
        </if>
        where is_delete=0
        <if test="params.keywords!=null and params.keywords!=''">
            and (developers like CONCAT('%',#{params.keywords},'%')
            or application_name like CONCAT('%',#{params.keywords},'%') )
        </if>
        <if test="params.isEnabled !=null">
            and is_enabled =#{params.isEnabled}
        </if>
        <choose>
            <when test="(params.sort != null and params.sort == 'download') or (params.labelId == 2)">
                order by download_count
            </when>
            <otherwise>
                order by update_time
            </otherwise>
        </choose>
        <choose>
            <when test="(params.isUp != null and params.isUp == 1)">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
    </select>

    <select id="getCategoryCount" resultType="java.util.Map">
        select t2.label_name labelName,t2.id,count( distinct t3.register_info_id) `count`
        from portal_app_label t1 right join portal_label t2 on t2.type = 2 and t1.label_id = t2.id

        left join portal_app_center t3 on t1.app_id = t3.register_info_id
        <if test="keyword != null">
            and t3.application_name like concat('%',#{keyword},'%')
        </if>
        and t3.is_delete = 0
        where 1=1 and
        t1.app_id in
        <foreach collection="appIdList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
        and t2.id != 0 and t2.type = 2
        group by t2.label_name order by t2.id
    </select>

    <select id="getAppIdByLabel" resultType="string">
        select
        <if test="label != null">
            app_id
        </if>
        <if test="label == null">
            register_info_id
        </if>
        from
        <if test="label != null">
            portal_label t1 join portal_app_label t2 on t1.id = t2.label_id and t1.type = 1
        </if>
        <if test="label == null">
            portal_app_center
        </if>
        where
        1=1
        <if test="label != null">
            and t1.label_name = #{label}
        </if>
        <if test="label == null">
            and is_delete = 0
        </if>
    </select>

    <select id="getAppCountByLabel" resultType="java.lang.Integer">
        select count(distinct t3.register_info_id)
        from portal_label t1
        <if test="label == null">
            right
        </if>
        join portal_app_label t2 on t1.id = t2.label_id
        <if test="label == null">
            right
        </if>
        join portal_app_center t3 on t2.app_id = t3.register_info_id
        where 1=1 and t1.del=1
        <if test="label != null">
            and t1.label_name = #{label}
        </if>
        <if test="keyword != null">
            and t3.application_name like concat('%',#{keyword},'%')
        </if>
        <if test="appIds != null and appIds.size()>0">
            and t3.register_info_id in
            <foreach collection="appIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        and t3.is_delete = 0

    </select>

    <select id="listAppIdsByRoles" resultType="java.lang.String">
        select app_id from sys_role_app_mapping t1 join sys_role t2 on t1.role_id =t2.id
        where t2.role_name in
        <foreach collection="roles" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>


    <select id="listAllApplicationInfo" resultMap="BaseResultMap">
        select register_info_id,application_name,developers,t2.label_id from portal_app_center t1 left join (select *
        from (select t1.app_id,label_id from portal_app_label t1 join portal_label t2 on t1.label_id=t2.id
        where type=2 and del=1)t)t2 on t1.register_info_id=t2.app_id
        where 1=1
        <if test="params.applicationName!=null and params.applicationName!=''">
            and t1.application_name like concat('%',#{params.applicationName},'%')
        </if>
    </select>

    <select id="listLables" resultType="Map">
        select id,label_name label from portal_label where type =2 and del=1
    </select>
</mapper>