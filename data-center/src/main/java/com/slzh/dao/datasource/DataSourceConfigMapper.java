package com.slzh.dao.datasource;

import com.slzh.model.config.datasource.rdbms.mysql.MySQLDataSourceConfig;
import com.slzh.model.datasource.DataSourceConfig;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface DataSourceConfigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    int insert(DataSourceConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    int insertSelective(DataSourceConfig record);
    int insertRdbmsSelective(MySQLDataSourceConfig config);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    DataSourceConfig selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    int updateByPrimaryKeySelective(DataSourceConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_config_data_source
     *
     * @mbggenerated Fri Jul 23 15:06:48 CST 2021
     */
    int updateByPrimaryKey(DataSourceConfig record);

    List<DataSourceConfig> listDataSourceConfig(@Param("params") Map<String, Object> params);

    int deleteDataSourceConfig(@Param("ids") List<Long> ids);

}